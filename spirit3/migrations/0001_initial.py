# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-02 14:28
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ablresutqc',
            fields=[
                ('ablresutqcid', models.AutoField(primary_key=True, serialize=False)),
                ('ablanalysis', models.FloatField(blank=True, null=True)),
                ('bcrablepos', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'ablresutqc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Analysistype',
            fields=[
                ('analysistypeid', models.AutoField(primary_key=True, serialize=False)),
                ('analysistype', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'analysistype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Controlresults',
            fields=[
                ('controlresultid', models.AutoField(primary_key=True, serialize=False)),
                ('controlct', models.FloatField(blank=True, null=True)),
                ('controlctmean', models.FloatField(blank=True, null=True)),
                ('controlquant', models.FloatField(blank=True, null=True)),
                ('controlquantmean', models.FloatField(blank=True, null=True)),
                ('controlctthresh', models.FloatField(blank=True, null=True)),
                ('controlbasestart', models.FloatField(blank=True, null=True)),
                ('controlbaseend', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'controlresults',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Controltype',
            fields=[
                ('controltypeid', models.AutoField(primary_key=True, serialize=False)),
                ('controltype', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'controltype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hospitals',
            fields=[
                ('hospitalsid', models.AutoField(primary_key=True, serialize=False)),
                ('hospname', models.CharField(blank=True, max_length=45, null=True)),
                ('hospcontact', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'hospitals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Overablresult',
            fields=[
                ('overablresultid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'overablresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Passfail',
            fields=[
                ('passfailid', models.AutoField(primary_key=True, serialize=False)),
                ('designation', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'passfail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patientinfo',
            fields=[
                ('patientinfoid', models.AutoField(primary_key=True, serialize=False)),
                ('nhsnumber', models.IntegerField(blank=True, null=True)),
                ('initials', models.CharField(blank=True, max_length=5, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patientinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pi',
            fields=[
                ('piid', models.AutoField(primary_key=True, serialize=False)),
                ('pifirst', models.CharField(blank=True, max_length=45, null=True)),
                ('pisecond', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'pi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plate',
            fields=[
                ('plateid', models.AutoField(primary_key=True, serialize=False)),
                ('dateofrun', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plate2Control',
            fields=[
                ('plate2controlid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'plate2control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plate2Standard',
            fields=[
                ('plate2standardid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'plate2standard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plateqc',
            fields=[
                ('plateqcid', models.AutoField(primary_key=True, serialize=False)),
                ('watercheck', models.IntegerField(blank=True, null=True)),
                ('negcheck', models.IntegerField(blank=True, null=True)),
                ('thresholdcheck', models.IntegerField(blank=True, null=True)),
                ('baselinecheck', models.IntegerField(blank=True, null=True)),
                ('poscheck', models.IntegerField(blank=True, null=True)),
                ('stdcurve2050', models.IntegerField(blank=True, null=True)),
                ('stdcurvepoints', models.IntegerField(blank=True, null=True)),
                ('slopecheck', models.IntegerField(blank=True, null=True)),
                ('correlationcheck', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plateqc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Qcreport',
            fields=[
                ('qcreportid', models.AutoField(primary_key=True, serialize=False)),
                ('qcreport', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qcreport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resultanalysis',
            fields=[
                ('resultanalysisid', models.AutoField(primary_key=True, serialize=False)),
                ('bcrablratio', models.FloatField(blank=True, db_column='BCRABLratio', null=True)),
                ('percentageratio', models.FloatField(blank=True, null=True)),
                ('mr', models.CharField(blank=True, max_length=5, null=True)),
                ('sensitivity', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'resultanalysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resultreports',
            fields=[
                ('resultreportsid', models.AutoField(primary_key=True, serialize=False)),
                ('resultreport', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resultreports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resulttype',
            fields=[
                ('resulttypeid', models.AutoField(primary_key=True, serialize=False)),
                ('resulttype', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'resulttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sampleinfo',
            fields=[
                ('sampleinfoid', models.AutoField(primary_key=True, serialize=False)),
                ('taken', models.DateTimeField(blank=True, null=True)),
                ('recieved', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sampleinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sampleresult',
            fields=[
                ('sampleresultid', models.AutoField(primary_key=True, serialize=False)),
                ('samplect', models.FloatField(blank=True, null=True)),
                ('samplectmean', models.FloatField(blank=True, null=True)),
                ('samplequant', models.FloatField(blank=True, null=True)),
                ('samplequantmean', models.FloatField(blank=True, null=True)),
                ('samplectthresh', models.FloatField(blank=True, null=True)),
                ('samplebasestart', models.FloatField(blank=True, null=True)),
                ('samplebaseend', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sampleresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('sampleid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'samples',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sampleseg',
            fields=[
                ('samplesegid', models.AutoField(primary_key=True, serialize=False)),
                ('weelnumber', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'sampleseg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Standardresults',
            fields=[
                ('standardresultid', models.AutoField(primary_key=True, serialize=False)),
                ('standardct', models.FloatField(blank=True, null=True)),
                ('standardctmean', models.FloatField(blank=True, null=True)),
                ('standardquant', models.FloatField(blank=True, null=True)),
                ('standardquantmean', models.FloatField(blank=True, null=True)),
                ('standardctthresh', models.FloatField(blank=True, null=True)),
                ('standardbasestart', models.FloatField(blank=True, null=True)),
                ('standardbaseend', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'standardresults',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Standardtype',
            fields=[
                ('standardtypeid', models.AutoField(primary_key=True, serialize=False)),
                ('standardtype', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'standardtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=45, null=True)),
                ('secondname', models.CharField(blank=True, max_length=45, null=True)),
                ('username', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
